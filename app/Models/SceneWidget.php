<?php
namespace App\Models;

use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;

class SceneWidget extends Model
{
    protected $table = 'scene_widgets';

    /**
     * Get the post that owns the comment.
     */
    public function scene()
    {
        return $this->belongsTo(Scene::class, 'scene_id');
    }

    public function getDataAttribute($value)
    {
        return json_decode($value, true);
    }

    public function setDataAttribute($value)
    {
        $this->attributes['data'] = json_encode($value);
    }

    public function toArray()
    {
        $arr = parent::toArray(); // TODO: Change the autogenerated stub
        $arr = [
            'id' => $this->id,
            'widgetData' => $this->data,
            'data' => $this->data,
            'type' => $this->widget_type,
            'is_active' => $this->is_active
        ];
        return $arr;
    }

    public function setDefaultData()
    {
        /**
         * {"score":{"home":3,"away":4},"team":{"home":"DIN","away":"SAH"},"color":{"home":"black","away":"green"},"position":{"top":"20","left":"20"}}
         * {"startPoint":1558181535,"timestamp":"2700","state":"play","advancedSize":null,"part":{"maxValue":"5400"},"position":{"top":20,"left":300}}
         */
        $data = [
            'position' => [
                'top' => 20,
                'left' => 20
            ]
        ];
        $data2 = [];
        switch ($this->widget_type) {
            case 'score':
                $data2 = [
                    'score' => [
                        'home' => 0,
                        'away' => 0,
                    ],
                    'team' => [
                        'home' => 'TMH',
                        'away' => 'TMA',
                    ],
                    'color' => [
                        'home' => 'black',
                        'away' => 'white',
                    ]
                ];
                break;
            case 'timer':
                $data2 = [
                    'startPoint' => Carbon::now()->timestamp,
                    'timestamp' => 0,
                    'state' => 'pause',
                    'advancedSize' => null,
                    'part' => [
                        'maxValue' => (45*60),
                        'title' => 1,
                    ]
                ];
                break;
            case 'squad':
                $data2 = [
                    'teamHome' => [
                        'title' => 'Team Home',
                        'logo' => null,
                        'main_players' => [],
                        'second_players' => [],
                        'coach' => null,
                    ],
                    'teamAway' => [
                        'title' => 'Team Away',
                        'logo' => null,
                        'main_players' => [],
                        'second_players' => [],
                        'coach' => null,
                    ],
                ];
                break;
        }
        $data = array_merge($data, $data2);
        $this->data = $data;
    }
}